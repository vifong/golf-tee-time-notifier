name: Golf Now Notifier

on:
  # schedule:
  #   - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch:

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  scrape-latest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'
          cache: 'pip'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Download snapshot.pickle
        uses: dawidd6/action-download-artifact@v2
        continue-on-error: true
        with:
          name: snapshot
          workflow: scrape.yml
          search_artifacts: true
      - name: Display file structure
        run: ls -R
      - name: Run script
        run: python golfteetimenotifier/main.py
      - name: Display file structure
        if: always()
        run: ls -R
      - name: Check snapshot.pickle exists
        id: check_snapshot
        uses: andstor/file-existence-action@v1
        with:
          files: "snapshot.pickle"
      - name: Upload snapshot.pickle
        if: steps.check_snapshot.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: snapshot
          path: snapshot.pickle 
      - name: Check message.txt exists
        id: check_message
        uses: andstor/file-existence-action@v1
        with:
          files: "message.txt"
      - name: Upload message.txt
        if: steps.check_message.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: message
          path: message.txt 
      - name: Set message vars
        id: vars
        if: steps.check_message.outputs.files_exists == 'true'
        run: |
          MSG_STRING=$(cat message.txt)
          echo "MSG_STRING<<EOF" >> $GITHUB_ENV
          echo "$MSG_STRING" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      # - name: 'Sending SMS Notification to VF'
      #   if: steps.check_message.outputs.files_exists == 'true'
      #   uses: twilio-labs/actions-sms@v1
      #   with:
      #     fromPhoneNumber: '+1(844)9684068'
      #     toPhoneNumber: ${{ secrets.VF_PHONE_NUMBER }}
      #     message: |
      #       ${{ env.MSG_STRING }}
      #   env:
      #     TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      #     TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      #     TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      # - name: 'Sending SMS Notification to BS'
      #   if: steps.check_message.outputs.files_exists == 'true'
      #   uses: twilio-labs/actions-sms@v1
      #   with:
      #     fromPhoneNumber: '+1(844)9684068'
      #     toPhoneNumber: ${{ secrets.BS_PHONE_NUMBER }}
      #     message: |
      #       ${{ env.MSG_STRING }}
      #   env:
      #     TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      #     TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      #     TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
